version: "3"

services:
  stripe:
    build:
      context: .
      dockerfile: ./packages/stripe/Dockerfile
    environment:
      API_URL: http://host.docker.internal:7071
    ports:
      - "4242:4242"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  blog:
    build:
      context: ./packages/blog
    environment:
      NEXT_PUBLIC_STRAPI_API_URL: http://blog-cms:1337
    ports:
      - "3000:3000"
    depends_on:
      - blog-cms

  blog-cms:
    build:
      context: ./packages/blog-cms
    environment:
      APP_KEYS: 4ppK3y1,4ppK3y2
      JWT_SECRET: Jw7s3cr3t
      ADMIN_JWT_SECRET: 4dm1nJw7s3cr3t
      API_TOKEN_SALT: pepper
      DATABASE_HOST: postgres
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: PostgresPass
      DATABASE_NAME: strapi
      DATABASE_PORT: 5432
      DATABASE_SSL: "false"
    ports:
      - "1337:1337"
    depends_on:
      postgres:
        condition: service_healthy

  mongodb:
    image: mongo:5.0
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=MongoPass
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: PostgresPass
      POSTGRES_DB: strapi
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres_setup:
    image: postgres:latest
    working_dir: /scripts/
    environment:
      STRAPI_DATABASE_HOST: postgres
      STRAPI_DATABASE_USERNAME: postgres
      STRAPI_DATABASE_PASSWORD: PostgresPass
      STRAPI_DATABASE_NAME: strapi
    command: ["./restore.sh", "strapi_20230419"]
    volumes:
      - ./scripts/database:/scripts
    depends_on:
      postgres:
        condition: service_healthy

  search:
    build: ./packages/search
    ports:
      - "3001:3000"
    environment:
      - QD_HOST=qdrant
      - QD_PORT=6333
      - OPENAI_API_URL=${OPENAI_API_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LISTINGS_API_URL=http://host.docker.internal:7071/api/listings
    extra_hosts:
      - "host.docker.internal:host-gateway"

  qdrant:
    image: docker.io/qdrant/qdrant:v1.2.0
    ports:
      - 6333:6333
    volumes:
      - qdrantdata:/qdrant/storage

volumes:
  pgdata:
  mongodata:
  qdrantdata:
